###############################################################################
# All drivers TCL configuration
###############################################################################

# The TCL vertexbuffer size.
#tnl.vb.size			= 64

###############################################################################
# All drivers WGL configuration
###############################################################################

# Ignore stereo requests in wglChoosePixelFormat.
# Not recommended, unless you want to force certain games to boot
# eg: Doom3
#wgl.ignore.stereo		= y

# Ignore alphabuffer requests in wglChoosePixelFormat
# Not recommended, unless you want to force certain games to boot
# eg: Doom3, Kotor1/2
#wgl.ignore.alphabuffer		= y

# Ignore stencilbuffer requests in wglChoosePixelFormat
# Not recommended, unless you want to force certain games to boot
# eg: Doom3, Kotor1/2, NeverwinterNights
#wgl.ignore.stencilbuffer	= y

###############################################################################
# x86 configuration
###############################################################################

# enable use of 3dnow features:
x86.enable.3dnow = y

# enable use of SSE features:
x86.enable.sse = y

###############################################################################
# 3dfx configuration
###############################################################################

# OpenGL version, as returned by glGetString(GL_VERSION).  It is really 1.1,
# but some games (Savage, Homeworld2) refuse to run unless >= 1.2.
#3dfx.opengl.version		= 1.2

# Texture compression.  Allowed values are 0, 1, 2, 3.  The driver performs
# the following safety checks:
#   if Voodoo1, Rush, Voodoo2, Banshee, Voodoo3 and this is greater than 1
#	subtract 2
#   if external codec not available and this is odd value
#	subtract 1
# The resulting value is processed as follows:
# 0 disable texture compression API
# 1 decompress precompressed textures
# 2 no compression within the driver, but use precompressed textures
# 3 allow compression within the driver and use precompressed textures
3dfx.texture.compression	= 3

# Maximum texture size, as returned by glGet(GL_MAX_TEXTURE_SIZE).  By default,
# it returns the hardware limit, but some games (CallOfDuty, IFoundHer) refuse
# to run unless >= 9.  Do not increase this just for fun, because textures
# larger that hardware can support are automatically rescaled, anyway.
# Has no effect on Voodoo4, Voodoo5.
#3dfx.maxlod			= 9

# Disable GL_{ARB|EXT}_texture_env_combine.  On Voodoo4, Voodoo5 cards,
# texture combine is fully supported, but you still can disable it just in case
# combine code is buggy (also, texture combine and trilinear filtering are
# mutually exclusive).  On other cards, texture combine is partially emulated.
# You can disable emulation if you experience texture mapping corruption.
#3dfx.disable.combine		= y

# Voodoo4, Voodoo5 can display 32bit textures on 16bit visuals.  Disabling this
# can speed up the application at the expense of very small loss in quality.
# Has no effect on Voodoo1, Rush, Voodoo2, Banshee, Voodoo3.
#3dfx.disable.32bpt		= y

# Multitexturing can greatly improve texture mapping.  Disabling multitex will
# slow down the application, but you still can do it just in case multitex code
# is buggy (also, multitexture and trilinear filtering are mutually exclusive).
# Has no effect on Voodoo1, Rush, Banshee.
#3dfx.disable.multitex		= y

# UMA can greatly improve texture caching.  Disabling UMA will slow down
# the application.  This option exists just in case UMA code is buggy.
# Has no effect on Voodoo1, Rush, Voodoo2.
#3dfx.disable.texuma		= y

# Disable Fog coordinate, just in case my fogcoord code is buggy.
# Has no effect on Voodoo1, Rush.
#3dfx.disable.fogcoord		= y

# Disable Texture mirror, just in case my texmirror code is buggy.
# Has no effect on Voodoo1, Rush.
#3dfx.disable.texmirror	= y

# Disable GL_NV_blend_square, just in case my blendsquare code is buggy.
# Has no effect on Voodoo1, Rush, Voodoo2, Banshee, Voodoo3.
#3dfx.disable.blendsquare	= y
